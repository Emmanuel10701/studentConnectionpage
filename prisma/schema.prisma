// prisma/schema.prisma
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
// Add this new model to your existing schema.prisma file.

model Subscriber {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  createdAt DateTime @default(now())
}



model User {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?          @unique
  password        String?
  emailVerified   DateTime?
  image           String?
  role            Role             @default(STUDENT)
  employerProfile EmployerProfile?
  studentProfile  StudentProfile?
  newsletters     Newsletter[]
  accounts        Account[]
  sessions        Session[]
}

enum Role {
  STUDENT
  EMPLOYER
  ADMIN
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Newsletter {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  subject    String
  content    String
  sentAt     DateTime @default(now())
  sentById   String   @db.ObjectId
  sentBy     User     @relation(fields: [sentById], references: [id])
  recipients String[]
}

model EmployerProfile {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  user        User   @relation(fields: [userId], references: [id])
  userId      String @unique @db.ObjectId
  companyName String
  companySize String
  industry    String
  phone       String
  website     String?
  position    String
}

model StudentProfile {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  user        User   @relation(fields: [userId], references: [id])
  userId      String @unique @db.ObjectId
  institution String
  course      String
  yearOfStudy String
}